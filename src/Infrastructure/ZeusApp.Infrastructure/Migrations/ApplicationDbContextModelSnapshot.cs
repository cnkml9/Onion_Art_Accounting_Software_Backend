// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZeusApp.Infrastructure.DbContexts;

#nullable disable

namespace ZeusApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetCoreHero.EntityFrameworkCore.AuditTrail.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Ayar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degeri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SistemAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ayarlar", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Currency")
                        .HasColumnType("int");

                    b.Property<int>("CustomerSupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerSupplierId");

                    b.ToTable("Banks", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerSupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerSupplierId")
                        .IsUnique();

                    b.ToTable("Contacts", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.CustomerCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CustomerCategories", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.CustomerSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Currency")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerSupplierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerSupplierType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("GeneralType")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdditionalTaxExempt")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVATExempt")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWithholdingTaxExempt")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,8)");

                    b.Property<DateTime>("OpeningBalanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalBalance")
                        .HasColumnType("decimal(18,8)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerCategoryId");

                    b.ToTable("CustomerSuppliers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("CustomerSupplier");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.OtherAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerSupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerSupplierId");

                    b.ToTable("OtherAddresses", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductBrandId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchasePriceExcludingVAT")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("PurchasePriceIncludingVAT")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("SalesPriceIncludingVAT")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("SalesUnitPriceExcludingVAT")
                        .HasColumnType("decimal(18,8)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalStockAmount")
                        .HasColumnType("decimal(18,8)");

                    b.Property<int>("VATRate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductBrandId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.ProductBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductBrands", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.ProductSalesInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,8)");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductQuantity")
                        .HasColumnType("decimal(18,8)");

                    b.Property<int>("ProductdId")
                        .HasColumnType("int");

                    b.Property<int>("SalesInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TotalSalesAmountForProduct")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("VATRate")
                        .HasColumnType("decimal(18,8)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesInvoiceId");

                    b.ToTable("ProductSalesInvoices", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.ProductStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchasePriceExcludingVAT")
                        .HasColumnType("decimal(18,8)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("StockAmount")
                        .HasColumnType("decimal(18,8)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int>("StockType")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,8)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("StockId");

                    b.ToTable("ProductStocks", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.RelatedPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerSupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerSupplierId");

                    b.ToTable("RelatedPersons", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.SalesInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerSupplierId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,8)");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("FullNameOrUnvan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAddressDifferent")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OtherAddressId")
                        .HasColumnType("int");

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("decimal(18,8)");

                    b.Property<int?>("SalesInvoiceCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SalesInvoiceType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TotalDiscount")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TotalVATAmount")
                        .HasColumnType("decimal(18,8)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerSupplierId");

                    b.HasIndex("SalesInvoiceCategoryId");

                    b.ToTable("SalesInvoices", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.SalesInvoiceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SalesInvoiceCategories", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("DocumentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StockCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StockCategoryId");

                    b.ToTable("Stocks", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("Stock");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.StockCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StockCategories", (string)null);
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.CorporateCustomerSupplier", b =>
                {
                    b.HasBaseType("ZeusApp.Domain.Entities.Catalog.CustomerSupplier");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("CorporateCustomerSupplier");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.IndividualCustomerSupplier", b =>
                {
                    b.HasBaseType("ZeusApp.Domain.Entities.Catalog.CustomerSupplier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcIdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("IndividualCustomerSupplier");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.StockIn", b =>
                {
                    b.HasBaseType("ZeusApp.Domain.Entities.Catalog.Stock");

                    b.Property<int?>("Currency")
                        .HasColumnType("int");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,8)");

                    b.Property<int>("StockInMovementType")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("StockIn");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.StockOut", b =>
                {
                    b.HasBaseType("ZeusApp.Domain.Entities.Catalog.Stock");

                    b.Property<int>("StockOutMovementType")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("StockOut");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Bank", b =>
                {
                    b.HasOne("ZeusApp.Domain.Entities.Catalog.CustomerSupplier", "CustomerSupplier")
                        .WithMany("Banks")
                        .HasForeignKey("CustomerSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerSupplier");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Contact", b =>
                {
                    b.HasOne("ZeusApp.Domain.Entities.Catalog.CustomerSupplier", "CustomerSupplier")
                        .WithOne("Contact")
                        .HasForeignKey("ZeusApp.Domain.Entities.Catalog.Contact", "CustomerSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerSupplier");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.CustomerSupplier", b =>
                {
                    b.HasOne("ZeusApp.Domain.Entities.Catalog.CustomerCategory", "CustomerCategory")
                        .WithMany("CustomerSuppliers")
                        .HasForeignKey("CustomerCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CustomerCategory");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.OtherAddress", b =>
                {
                    b.HasOne("ZeusApp.Domain.Entities.Catalog.CustomerSupplier", "CustomerSupplier")
                        .WithMany("OtherAddresses")
                        .HasForeignKey("CustomerSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerSupplier");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Product", b =>
                {
                    b.HasOne("ZeusApp.Domain.Entities.Catalog.ProductBrand", "ProductBrand")
                        .WithMany("Products")
                        .HasForeignKey("ProductBrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ZeusApp.Domain.Entities.Catalog.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProductBrand");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.ProductSalesInvoice", b =>
                {
                    b.HasOne("ZeusApp.Domain.Entities.Catalog.Product", "Product")
                        .WithMany("ProductSalesInvoices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ZeusApp.Domain.Entities.Catalog.SalesInvoice", "SalesInvoice")
                        .WithMany("ProductSalesInvoices")
                        .HasForeignKey("SalesInvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SalesInvoice");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.ProductStock", b =>
                {
                    b.HasOne("ZeusApp.Domain.Entities.Catalog.Product", "Product")
                        .WithMany("ProductStocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ZeusApp.Domain.Entities.Catalog.Stock", "Stock")
                        .WithMany("ProductStocks")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.RelatedPerson", b =>
                {
                    b.HasOne("ZeusApp.Domain.Entities.Catalog.CustomerSupplier", "CustomerSupplier")
                        .WithMany("RelatedPersons")
                        .HasForeignKey("CustomerSupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerSupplier");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.SalesInvoice", b =>
                {
                    b.HasOne("ZeusApp.Domain.Entities.Catalog.CustomerSupplier", "CustomerSupplier")
                        .WithMany()
                        .HasForeignKey("CustomerSupplierId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ZeusApp.Domain.Entities.Catalog.SalesInvoiceCategory", "SalesInvoiceCategory")
                        .WithMany("SalesInvoices")
                        .HasForeignKey("SalesInvoiceCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CustomerSupplier");

                    b.Navigation("SalesInvoiceCategory");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Stock", b =>
                {
                    b.HasOne("ZeusApp.Domain.Entities.Catalog.StockCategory", "StockCategory")
                        .WithMany("Stocks")
                        .HasForeignKey("StockCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("StockCategory");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.CustomerCategory", b =>
                {
                    b.Navigation("CustomerSuppliers");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.CustomerSupplier", b =>
                {
                    b.Navigation("Banks");

                    b.Navigation("Contact");

                    b.Navigation("OtherAddresses");

                    b.Navigation("RelatedPersons");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Product", b =>
                {
                    b.Navigation("ProductSalesInvoices");

                    b.Navigation("ProductStocks");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.ProductBrand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.SalesInvoice", b =>
                {
                    b.Navigation("ProductSalesInvoices");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.SalesInvoiceCategory", b =>
                {
                    b.Navigation("SalesInvoices");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.Stock", b =>
                {
                    b.Navigation("ProductStocks");
                });

            modelBuilder.Entity("ZeusApp.Domain.Entities.Catalog.StockCategory", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
